openapi: 3.0.1
info:
  title: issuer-admin-api
  description: REST API documentation for the issuer-admin-api
  version: 1.0.0-alpha
servers:
- url: /
paths:
  /v1alpha/attestations:
    post:
      tags:
      - Issuer Service Attestation Admin API
      description: Creates an attestation in the runtime.
      operationId: createAttestation
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AttestationRequest"
      responses:
        "201":
          description: The attestation was added successfully.
        "400":
          description: "Request body was malformed, or the request could not be processed"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ApiErrorDetail"
        "401":
          description: "The request could not be completed, because either the authentication\
            \ was missing or was not valid."
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ApiErrorDetail"
        "404":
          description: The participant was not found.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ApiErrorDetail"
        "409":
          description: "Can't add the participant, because a object with the same\
            \ ID already exists"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ApiErrorDetail"
  /v1alpha/attestations/query:
    post:
      tags:
      - Issuer Service Attestation Admin API
      description: "Query attestations, possibly across multiple participants."
      operationId: queryAttestations
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/QuerySpec"
      responses:
        "200":
          description: A list of attestation metadata.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AttestationResponse"
        "400":
          description: "Request body was malformed, or the request could not be processed"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ApiErrorDetail"
        "401":
          description: "The request could not be completed, because either the authentication\
            \ was missing or was not valid."
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ApiErrorDetail"
  /v1alpha/credentialdefinitions:
    put:
      tags:
      - Issuer Service Credential Definition Admin API
      description: Updates credential definition.
      operationId: updateCredentialDefinition
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CredentialDefinition"
      responses:
        "200":
          description: The credential definition was updated successfully.
        "400":
          description: "Request body was malformed, or the request could not be processed"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ApiErrorDetail"
        "401":
          description: "The request could not be completed, because either the authentication\
            \ was missing or was not valid."
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ApiErrorDetail"
        "404":
          description: Can't update the credential definition because it was not found.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ApiErrorDetail"
    post:
      tags:
      - Issuer Service Credential Definition Admin API
      description: Adds a new credential definition.
      operationId: createCredentialDefinition
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CredentialDefinition"
      responses:
        "201":
          description: The credential definition was created successfully.
        "400":
          description: "Request body was malformed, or the request could not be processed"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ApiErrorDetail"
        "401":
          description: "The request could not be completed, because either the authentication\
            \ was missing or was not valid."
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ApiErrorDetail"
        "409":
          description: "Can't create the credential definition, because a object with\
            \ the same ID already exists"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ApiErrorDetail"
  /v1alpha/credentialdefinitions/query:
    post:
      tags:
      - Issuer Service Credential Definition Admin API
      description: Gets all credential definitions for a certain query.
      operationId: queryCredentialDefinitions
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/QuerySpec"
      responses:
        "200":
          description: A list of credentials definitions.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CredentialDefinition"
        "400":
          description: "Request body was malformed, or the request could not be processed"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ApiErrorDetail"
        "401":
          description: "The request could not be completed, because either the authentication\
            \ was missing or was not valid."
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ApiErrorDetail"
  /v1alpha/credentialdefinitions/{credentialDefinitionId}:
    get:
      tags:
      - Issuer Service Credential Definition Admin API
      description: Gets a credential definition by its ID.
      operationId: getParticipantById
      parameters:
      - name: credentialDefinitionId
        in: path
        description: ID of the credential definition that should be returned
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: credentialDefinitionId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: The credential definition was found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CredentialDefinition"
        "400":
          description: "Request body was malformed, or the request could not be processed"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ApiErrorDetail"
        "401":
          description: "The request could not be completed, because either the authentication\
            \ was missing or was not valid."
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ApiErrorDetail"
        "404":
          description: The credential definition was not found.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ApiErrorDetail"
    delete:
      tags:
      - Issuer Service Credential Definition Admin API
      description: Deletes a credential definition by its ID.
      operationId: deleteCredentialDefinitionById
      parameters:
      - name: credentialDefinitionId
        in: path
        description: ID of the credential definition that should be returned
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: credentialDefinitionId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: The credential definition was deleted.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CredentialDefinition"
        "400":
          description: "Request body was malformed, or the request could not be processed"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ApiErrorDetail"
        "401":
          description: "The request could not be completed, because either the authentication\
            \ was missing or was not valid."
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ApiErrorDetail"
        "404":
          description: The credential definition was not found.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ApiErrorDetail"
  /v1alpha/credentials/query:
    post:
      tags:
      - Issuer Service Credentials Admin API
      description: "Query credentials, possibly across multiple participants."
      operationId: queryCredentials
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/QuerySpec"
      responses:
        "200":
          description: A list of verifiable credential metadata. Note that these are
            not actual VerifiableCredentials.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/VerifiableCredentialDto"
        "400":
          description: "Request body was malformed, or the request could not be processed"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ApiErrorDetail"
        "401":
          description: "The request could not be completed, because either the authentication\
            \ was missing or was not valid."
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ApiErrorDetail"
  /v1alpha/credentials/{credentialId}/resume:
    post:
      tags:
      - Issuer Service Credentials Admin API
      description: Resumes a credential with the given ID for the given participant.
        Resumed credentials will be removed from the Revocation List.
      operationId: resumeCredential
      parameters:
      - name: credentialId
        in: path
        description: ID of the credential to resume
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: credentialId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: The credential was resumed successfully. Check the Revocation
            List credential to confirm.
        "400":
          description: "Request body was malformed, or the request could not be processed"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ApiErrorDetail"
        "401":
          description: "The request could not be completed, because either the authentication\
            \ was missing or was not valid."
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ApiErrorDetail"
        "404":
          description: The credential or the participant was not found.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ApiErrorDetail"
  /v1alpha/credentials/{credentialId}/revoke:
    post:
      tags:
      - Issuer Service Credentials Admin API
      description: Revokes a credential with the given ID for the given participant.
        Revoked credentials will be added to the Revocation List
      operationId: revokeCredential
      parameters:
      - name: credentialId
        in: path
        description: ID of the credential to revoke
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: credentialId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: The credential was revoked successfully. Check the Revocation
            List credential to confirm.
        "400":
          description: "Request body was malformed, or the request could not be processed"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ApiErrorDetail"
        "401":
          description: "The request could not be completed, because either the authentication\
            \ was missing or was not valid."
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ApiErrorDetail"
        "404":
          description: The credential or the participant was not found.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ApiErrorDetail"
  /v1alpha/credentials/{credentialId}/status:
    get:
      tags:
      - Issuer Service Credentials Admin API
      description: Checks the revocation status of a credential with the given ID
        for the given participant.
      operationId: checkCredentialStatus
      parameters:
      - name: credentialId
        in: path
        description: ID of the credential to check
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: credentialId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: The credential status.
        "400":
          description: "Request body was malformed, or the request could not be processed"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ApiErrorDetail"
        "401":
          description: "The request could not be completed, because either the authentication\
            \ was missing or was not valid."
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ApiErrorDetail"
        "404":
          description: The credential or the participant was not found.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ApiErrorDetail"
  /v1alpha/credentials/{credentialId}/suspend:
    post:
      tags:
      - Issuer Service Credentials Admin API
      description: Suspends a credential with the given ID for the given participant.
        Suspended credentials will be added to the Revocation List. Suspension is
        reversible.
      operationId: suspendCredential
      parameters:
      - name: credentialId
        in: path
        description: ID of the credential to revoke
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: credentialId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: The credential was suspended successfully. Check the Revocation
            List credential to confirm.
        "400":
          description: "Request body was malformed, or the request could not be processed"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ApiErrorDetail"
        "401":
          description: "The request could not be completed, because either the authentication\
            \ was missing or was not valid."
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ApiErrorDetail"
        "404":
          description: The credential or the participant was not found.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ApiErrorDetail"
  /v1alpha/credentials/{participantId}:
    get:
      tags:
      - Issuer Service Credentials Admin API
      description: Gets all credentials for a certain participant.
      operationId: getCredentials
      parameters:
      - name: participantId
        in: path
        description: ID of the participant whos credentials should be returned
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: participantId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: A list of verifiable credential metadata. Note that these are
            not actual VerifiableCredentials.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/VerifiableCredentialDto"
        "400":
          description: "Request body was malformed, or the request could not be processed"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ApiErrorDetail"
        "401":
          description: "The request could not be completed, because either the authentication\
            \ was missing or was not valid."
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ApiErrorDetail"
        "404":
          description: The participant was not found.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ApiErrorDetail"
  /v1alpha/participants:
    put:
      tags:
      - Issuer Service Participant Admin API
      description: Updates participant data.
      operationId: updateParticipant
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ParticipantDto"
      responses:
        "200":
          description: The participant was updated successfully.
        "400":
          description: "Request body was malformed, or the request could not be processed"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ApiErrorDetail"
        "401":
          description: "The request could not be completed, because either the authentication\
            \ was missing or was not valid."
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ApiErrorDetail"
        "404":
          description: Can't update the participant because it was not found.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ApiErrorDetail"
    post:
      tags:
      - Issuer Service Participant Admin API
      description: Adds a new participant.
      operationId: addParticipant
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ParticipantDto"
      responses:
        "201":
          description: The participant was added successfully.
        "400":
          description: "Request body was malformed, or the request could not be processed"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ApiErrorDetail"
        "401":
          description: "The request could not be completed, because either the authentication\
            \ was missing or was not valid."
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ApiErrorDetail"
        "409":
          description: "Can't add the participant, because a object with the same\
            \ ID already exists"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ApiErrorDetail"
  /v1alpha/participants/query:
    post:
      tags:
      - Issuer Service Participant Admin API
      description: Gets all participants for a certain query.
      operationId: queryParticipants
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/QuerySpec"
      responses:
        "200":
          description: A list of participant metadata.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ParticipantDto"
        "400":
          description: "Request body was malformed, or the request could not be processed"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ApiErrorDetail"
        "401":
          description: "The request could not be completed, because either the authentication\
            \ was missing or was not valid."
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ApiErrorDetail"
        "404":
          description: The participant was not found.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ApiErrorDetail"
  /v1alpha/participants/{participantId}:
    get:
      tags:
      - Issuer Service Participant Admin API
      description: Gets metadata for a certain participant.
      operationId: getParticipantById
      parameters:
      - name: participantId
        in: path
        description: ID of the participant who should be returned
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: participantId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: A list of verifiable credential metadata. Note that these are
            not actual VerifiableCredentials.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Participant"
        "400":
          description: "Request body was malformed, or the request could not be processed"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ApiErrorDetail"
        "401":
          description: "The request could not be completed, because either the authentication\
            \ was missing or was not valid."
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ApiErrorDetail"
        "404":
          description: The participant was not found.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ApiErrorDetail"
  /v1alpha/participants/{participantId}/attestations:
    get:
      tags:
      - Issuer Service Attestation Admin API
      description: Get all attestations for a given participant.
      operationId: getAttestations
      parameters:
      - name: participantId
        in: path
        description: ID of the participant
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: participantId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/QuerySpec"
      responses:
        "200":
          description: A list of attestation metadata.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AttestationResponse"
        "400":
          description: "Request body was malformed, or the request could not be processed"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ApiErrorDetail"
        "401":
          description: "The request could not be completed, because either the authentication\
            \ was missing or was not valid."
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ApiErrorDetail"
  /v1alpha/participants/{participantId}/attestations/{attestationId}:
    post:
      tags:
      - Issuer Service Attestation Admin API
      description: Links an attestation to a participant.
      operationId: linkAttestation
      parameters:
      - name: participantId
        in: path
        description: ID of the participant
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: attestationId
        in: path
        description: ID of the attestation
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: participantId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: attestationId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "201":
          description: The attestation was added successfully.
        "400":
          description: "Request body was malformed, or the request could not be processed"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ApiErrorDetail"
        "401":
          description: "The request could not be completed, because either the authentication\
            \ was missing or was not valid."
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ApiErrorDetail"
        "404":
          description: The participant was not found.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ApiErrorDetail"
        "409":
          description: "Can't add the participant, because a object with the same\
            \ ID already exists"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ApiErrorDetail"
    delete:
      tags:
      - Issuer Service Attestation Admin API
      description: Deletes a particular attestation for a given participant.
      operationId: deleteAttestation
      parameters:
      - name: participantId
        in: path
        description: ID of the participant
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: attestationId
        in: path
        description: ID of the attestation to be removed
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: participantId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: attestationId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/QuerySpec"
      responses:
        "204":
          description: The attestation was successfully deleted.
        "400":
          description: "Request body was malformed, or the request could not be processed"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ApiErrorDetail"
        "401":
          description: "The request could not be completed, because either the authentication\
            \ was missing or was not valid."
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ApiErrorDetail"
        "404":
          description: The attestation or the participant was not found.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ApiErrorDetail"
components:
  schemas:
    ApiErrorDetail:
      type: object
      properties:
        invalidValue:
          type: object
        message:
          type: string
        path:
          type: string
        type:
          type: string
    AttestationRequest:
      type: object
      properties:
        attestationId:
          type: string
        properties:
          type: object
          additionalProperties:
            type: object
    AttestationResponse:
      type: object
      properties:
        attestationId:
          type: string
        participantId:
          type: string
    CredentialDefinition:
      type: object
      properties:
        attestations:
          type: array
          items:
            type: string
        credentialType:
          type: string
        dataModel:
          type: string
          enum:
          - V_1_1
          - V_2_0
        id:
          type: string
        jsonSchema:
          type: string
        jsonSchemaUrl:
          type: string
        mappings:
          type: array
          items:
            $ref: "#/components/schemas/MappingDefinition"
        rules:
          type: array
          items:
            $ref: "#/components/schemas/CredentialRuleDefinition"
        validity:
          type: integer
          format: int64
    CredentialRuleDefinition:
      type: object
      properties:
        configuration:
          type: object
          additionalProperties:
            type: object
        type:
          type: string
    CredentialSchema:
      type: object
      properties:
        id:
          type: string
        type:
          type: string
    CredentialStatus:
      type: object
      properties:
        additionalProperties:
          type: object
          additionalProperties:
            type: object
          writeOnly: true
        id:
          type: string
        type:
          type: string
    CredentialStatusResponse:
      type: object
      properties:
        credentialId:
          type: string
        reason:
          type: string
        status:
          type: string
    CredentialSubject:
      type: object
      properties:
        id:
          type: string
    Criterion:
      type: object
      properties:
        operandLeft:
          type: object
        operandRight:
          type: object
        operator:
          type: string
    Issuer:
      type: object
      properties:
        additionalProperties:
          type: object
          additionalProperties:
            type: object
        id:
          type: string
    MappingDefinition:
      type: object
      properties:
        input:
          type: string
        output:
          type: string
        required:
          type: boolean
    Participant:
      type: object
      properties:
        did:
          type: string
        participantId:
          type: string
        participantName:
          type: string
    ParticipantDto:
      required:
      - did
      - participantId
      type: object
      properties:
        did:
          type: string
        name:
          type: string
        participantId:
          type: string
    QuerySpec:
      type: object
      properties:
        filterExpression:
          type: array
          items:
            $ref: "#/components/schemas/Criterion"
        limit:
          type: integer
          format: int32
        offset:
          type: integer
          format: int32
        sortField:
          type: string
        sortOrder:
          type: string
          enum:
          - ASC
          - DESC
    VerifiableCredential:
      type: object
      properties:
        credentialSchema:
          type: array
          items:
            $ref: "#/components/schemas/CredentialSchema"
        credentialStatus:
          type: array
          items:
            $ref: "#/components/schemas/CredentialStatus"
        credentialSubject:
          type: array
          items:
            $ref: "#/components/schemas/CredentialSubject"
        dataModelVersion:
          type: string
          enum:
          - V_1_1
          - V_2_0
        description:
          type: string
        expirationDate:
          type: string
          format: date-time
        id:
          type: string
        issuanceDate:
          type: string
          format: date-time
        issuer:
          $ref: "#/components/schemas/Issuer"
        name:
          type: string
        type:
          type: array
          items:
            type: string
    VerifiableCredentialDto:
      type: object
      properties:
        credential:
          $ref: "#/components/schemas/VerifiableCredential"
        format:
          type: string
          enum:
          - JSON_LD
          - JWT
          - VC1_0_LD
          - VC1_0_JWT
          - VC2_0_JOSE
          - VC2_0_SD_JWT
          - VC2_0_COSE

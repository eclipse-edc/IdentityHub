openapi: 3.0.1
info:
  description: This is the Identity API for manipulating VerifiableCredentials
  title: VerifiableCredentials Identity API
  version: "1"
paths:
  /v1alpha/credentials:
    get:
      description: Get all VerifiableCredentials across all Participant Contexts.
        Requires elevated access.
      operationId: getAllCredentials
      parameters:
      - in: query
        name: offset
        schema:
          type: integer
          format: int32
          default: 0
      - in: query
        name: limit
        schema:
          type: integer
          format: int32
          default: 50
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/VerifiableCredentialResource"
          description: The list of VerifiableCredential resources.
        "400":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ApiErrorDetail"
          description: The query was malformed or was not understood by the server.
        "401":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ApiErrorDetail"
          description: "The request could not be completed, because either the authentication\
            \ was missing or was not valid."
      tags:
      - Verifiable Credentials
  /v1alpha/participants/{participantContextId}/credentials:
    get:
      description: Query VerifiableCredentials by type.
      operationId: queryCredentialsByType
      parameters:
      - description: Base64-Url encode Participant Context ID
        in: path
        name: participantContextId
        required: true
        schema:
          type: string
      - in: query
        name: type
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/VerifiableCredentialResource"
          description: The list of VerifiableCredentials.
        "400":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ApiErrorDetail"
          description: The query was malformed or was not understood by the server.
        "403":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ApiErrorDetail"
          description: "The request could not be completed, because either the authentication\
            \ was missing or was not valid."
      tags:
      - Verifiable Credentials
    post:
      description: Adds a new VerifiableCredential into the system.
      operationId: addCredential
      parameters:
      - description: Base64-Url encode Participant Context ID
        in: path
        name: participantContextId
        required: true
        schema:
          type: string
      - in: path
        name: participantContextId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/VerifiableCredentialManifest"
      responses:
        "204":
          description: The VerifiableCredential was successfully created.
        "400":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ApiErrorDetail"
          description: "Request body was malformed, or the request could not be processed"
        "403":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ApiErrorDetail"
          description: "The request could not be completed, because either the authentication\
            \ was missing or was not valid."
        "409":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ApiErrorDetail"
          description: "Could not create VerifiableCredential, because a VerifiableCredential\
            \ with that ID already exists"
      tags:
      - Verifiable Credentials
    put:
      description: Update an existing VerifiableCredential.
      operationId: updateCredential
      parameters:
      - description: Base64-Url encode Participant Context ID
        in: path
        name: participantContextId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/VerifiableCredentialManifest"
      responses:
        "204":
          description: The VerifiableCredential was updated successfully.
        "400":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ApiErrorDetail"
          description: "Request body was malformed, or the request could not be processed"
        "403":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ApiErrorDetail"
          description: "The request could not be completed, because either the authentication\
            \ was missing or was not valid."
        "404":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ApiErrorDetail"
          description: VerifiableCredential could not be updated because it does not
            exist.
      tags:
      - Verifiable Credentials
  /v1alpha/participants/{participantContextId}/credentials/{credentialId}:
    delete:
      description: Delete a VerifiableCredential.
      operationId: deleteCredential
      parameters:
      - description: Base64-Url encode Participant Context ID
        in: path
        name: participantContextId
        required: true
        schema:
          type: string
      - in: path
        name: credentialId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: The VerifiableCredential was deleted successfully
        "400":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ApiErrorDetail"
          description: "Request body was malformed, or the request could not be processed"
        "403":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ApiErrorDetail"
          description: "The request could not be completed, because either the authentication\
            \ was missing or was not valid."
        "404":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ApiErrorDetail"
          description: A VerifiableCredential with the given ID does not exist.
      tags:
      - Verifiable Credentials
    get:
      description: Finds a VerifiableCredential by ID.
      operationId: getCredential
      parameters:
      - description: Base64-Url encode Participant Context ID
        in: path
        name: participantContextId
        required: true
        schema:
          type: string
      - in: path
        name: credentialId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VerifiableCredentialResource"
          description: The VerifiableCredential.
        "400":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ApiErrorDetail"
          description: "Request body was malformed, or the request could not be processed"
        "403":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ApiErrorDetail"
          description: "The request could not be completed, because either the authentication\
            \ was missing or was not valid."
        "404":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ApiErrorDetail"
          description: A VerifiableCredential with the given ID does not exist.
      tags:
      - Verifiable Credentials
components:
  schemas:
    Action:
      type: object
      properties:
        constraint:
          $ref: "#/components/schemas/Constraint"
        includedIn:
          type: string
        type:
          type: string
    ApiErrorDetail:
      type: object
      properties:
        invalidValue:
          type: object
        message:
          type: string
        path:
          type: string
        type:
          type: string
    Constraint:
      type: object
      discriminator:
        propertyName: edctype
      properties:
        edctype:
          type: string
      required:
      - edctype
    CredentialStatus:
      type: object
      properties:
        additionalProperties:
          type: object
          additionalProperties:
            type: object
        id:
          type: string
        type:
          type: string
    CredentialSubject:
      type: object
      properties:
        id:
          type: string
    Duty:
      type: object
      properties:
        action:
          $ref: "#/components/schemas/Action"
        constraints:
          type: array
          items:
            $ref: "#/components/schemas/Constraint"
    Issuer:
      type: object
      properties:
        additionalProperties:
          type: object
          additionalProperties:
            type: object
        id:
          type: string
    Permission:
      type: object
      properties:
        action:
          $ref: "#/components/schemas/Action"
        constraints:
          type: array
          items:
            $ref: "#/components/schemas/Constraint"
        duties:
          type: array
          items:
            $ref: "#/components/schemas/Duty"
    Policy:
      type: object
      properties:
        '@type':
          type: string
          enum:
          - SET
          - OFFER
          - CONTRACT
        assignee:
          type: string
        assigner:
          type: string
        extensibleProperties:
          type: object
          additionalProperties:
            type: object
        inheritsFrom:
          type: string
        obligations:
          type: array
          items:
            $ref: "#/components/schemas/Duty"
        permissions:
          type: array
          items:
            $ref: "#/components/schemas/Permission"
        profiles:
          type: array
          items:
            type: string
        prohibitions:
          type: array
          items:
            $ref: "#/components/schemas/Prohibition"
        target:
          type: string
    Prohibition:
      type: object
      properties:
        action:
          $ref: "#/components/schemas/Action"
        constraints:
          type: array
          items:
            $ref: "#/components/schemas/Constraint"
        remedies:
          type: array
          items:
            $ref: "#/components/schemas/Duty"
    VerifiableCredential:
      type: object
      properties:
        credentialStatus:
          type: array
          items:
            $ref: "#/components/schemas/CredentialStatus"
        credentialSubject:
          type: array
          items:
            $ref: "#/components/schemas/CredentialSubject"
        dataModelVersion:
          type: string
          enum:
          - V_1_1
          - V_2_0
        description:
          type: string
        expirationDate:
          type: string
          format: date-time
        id:
          type: string
        issuanceDate:
          type: string
          format: date-time
        issuer:
          $ref: "#/components/schemas/Issuer"
        name:
          type: string
        type:
          type: array
          items:
            type: string
    VerifiableCredentialContainer:
      type: object
      properties:
        credential:
          $ref: "#/components/schemas/VerifiableCredential"
        format:
          type: string
          enum:
          - JSON_LD
          - JWT
          - VC1_0_LD
          - VC1_0_JWT
          - VC2_0_JOSE
          - VC2_0_SD_JWT
          - VC2_0_COSE
        rawVc:
          type: string
    VerifiableCredentialManifest:
      type: object
      properties:
        id:
          type: string
        issuancePolicy:
          $ref: "#/components/schemas/Policy"
        participantContextId:
          type: string
        reissuancePolicy:
          $ref: "#/components/schemas/Policy"
        verifiableCredentialContainer:
          $ref: "#/components/schemas/VerifiableCredentialContainer"
    VerifiableCredentialResource:
      type: object
      properties:
        credentialStatus:
          type: string
          enum:
          - INITIAL
          - REQUESTING
          - REQUESTED
          - ISSUING
          - ISSUED
          - REVOKED
          - SUSPENDED
          - EXPIRED
          - NOT_YET_VALID
          - ERROR
          writeOnly: true
        holderId:
          type: string
        id:
          type: string
        issuancePolicy:
          $ref: "#/components/schemas/Policy"
        issuerId:
          type: string
        participantContextId:
          type: string
        reissuancePolicy:
          $ref: "#/components/schemas/Policy"
        state:
          type: integer
          format: int32
        timeOfLastStatusUpdate:
          type: string
          format: date-time
        timestamp:
          type: integer
          format: int64
        verifiableCredential:
          $ref: "#/components/schemas/VerifiableCredentialContainer"
